{"version":3,"sources":["components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["ContactList","contacts","onDeleteContact","className","map","name","number","id","type","onClick","ContactForm","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","trim","props","onSubmit","alert","this","onChange","Component","Filter","onFilter","shortid","require","App","filter","handleFilter","data","search","find","el","toLowerCase","newContact","generate","prevState","getContactList","normalizedFilter","contact","includes","filtered","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","contactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95d7d212.chunk.js","sourcesContent":["import './ContactList.css';\nimport PropTypes from 'prop-types';\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <table className=\"List-table\">\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                del\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport './ContactForm.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name.trim() === '' || this.state.number.trim() === '') {\n      alert('Fill all fields!');\n      return;\n    }\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"Form\" onSubmit={this.handleSubmit}>\n        <label className=\"Form-label\">\n          Name\n          <input\n            className=\"Form-input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className=\"Form-label\">\n          Number\n          <input\n            className=\"Form-input\"\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <label>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","// import data from '../../data.json';\nimport React, { Component } from 'react';\nimport './App.css';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nconst shortid = require('shortid');\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  handleFilter = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n  handleSubmit = data => {\n    const search = this.state.contacts.find(\n      el => el.name.toLowerCase() === data.name.toLowerCase(),\n    );\n    if (search) {\n      alert(`${search.name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      ...data,\n      id: shortid.generate(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n  getContactList = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  onDeleteContact = id => {\n    this.setState(prevState => {\n      const filtered = prevState.contacts.filter(el => el.id !== id);\n      return {\n        contacts: [...filtered],\n      };\n    });\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const contactList = this.getContactList();\n    const { filter } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <p className=\"App-find\">Find contacts by name</p>\n        <Filter value={filter} onFilter={this.handleFilter} />\n        <ContactList\n          contacts={contactList}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}